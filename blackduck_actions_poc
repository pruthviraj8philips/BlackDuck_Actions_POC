name: blackduck_actions_poc

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, x64, philips]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # setup java 11
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # Run Synopsys Detect
      - name: Run Synopsys Detect
        id: blackduck_scan_status
        uses: blackduck-inc/black-duck-security-scan@v2.0.0

        ### Use below configuration to set specific detect environment variables
        env:
          DETECT_PROJECT_NAME: test_project_3
        with:
          blackducksca_url: https://blackduck.philips.com/
          blackducksca_token: NDg1YjhhNDEtYmE4Yy00MDY2LTlhYzctMTFmM2M4ZmVjNDdhOjY5NDI3MTBiLTg1YjEtNDBiZi1iZWQ5LTQ2MGNhY2Q3ZTIyNA==
          blackducksca_scan_full: true
          # blackducksca_waitForScan: false   # Used to support the async mode
  
          ### Accepts Multiple Values
          #blackducksca_scan_failure_severities: 'BLOCKER,CRITICAL'
          
          ### Arbitrary product-related CL arguments
          # detect_search_depth: 2
          # detect_args: '--detect.diagnostic=true'
          # detect_config_path: '/Users/Config/application.properties'
 
          ### Uncomment below configuration to enable automatic fix pull request creation if vulnerabilities are reported
          # blackducksca_fixpr_enabled: true
          # blackducksca_fixpr_maxCount: 5
          # blackducksca_fixpr_filter_severities: 'CRITICAL,HIGH'
          # blackducksca_fixpr_useUpgradeGuidance: 'SHORT_TERM,LONG_TERM'
          # github_token: ${{ secrets.GITHUB_TOKEN }} # Mandatory when blackducksca_fixpr_enabled is set to 'true'

          ### SARIF report generation and upload to GitHub Adavanced Security: Uncomment below to enable
          # blackducksca_reports_sarif_create: true # Create Black Duck SCA SARIF report and upload it as artifact
          # blackducksca_reports_sarif_file_path: '/Users/tmp/report.sarif.json' # File path including file name where SARIF report should be created(need to include file name as well)
          # blackducksca_reports_sarif_severities: 'CRITICAL,HIGH'
          # blackducksca_reports_sarif_groupSCAIssues: true # By default true
          # blackducksca_upload_sarif_report: true  # Upload Black Duck SCA SARIF report in GitHub Advanced Security tab
          # github_token: ${{ secrets.GITHUB_TOKEN }} # Required when blackducksca_upload_sarif_report is set as true
          
          ### To enable Black Duck SCA policy badges
          # blackducksca_policy_badges_create: true
          # blackducksca_policy_badges_maxCount: 5
          
          # project_directory: ${{ vars.PROJECT_DIRECTORY }}
  
          ### Uncomment below configuration if Bridge diagnostic files needs to be uploaded
          # include_diagnostics: true
